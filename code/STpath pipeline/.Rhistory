all(file.exists(sp_info$spatial_path))
sp_info <- sp_info[file.exists(sp_info$spatial_path), ]
sp_info$image_path <- file.path(sp_info$dir, "image", paste0(sp_info$slide, ".png"))
sp_info <- sp_info[file.exists(sp_info$image_path), ]
metadata_all <- read.csv(file.path(st_dir, "meta/meta_all_gene.csv"))
sp_info <- metadata_all[, c("slide", "tech", "species", "tissue", "involve_cancer")]
sp_info$dir <- file.path(st_dir, sp_info$tech)
sp_info$spatial_path <- file.path(sp_info$dir, "coord", paste0(sp_info$slide, "_coord.csv"))
all(file.exists(sp_info$spatial_path))
sp_info <- sp_info[file.exists(sp_info$spatial_path), ]
sp_info$image_path <- file.path(sp_info$dir, "image", paste0(sp_info$slide, ".png"))
all(file.exists(sp_info$image_path))
sp_info$pxl_x_col <- 3
sp_info$pxl_y_col <- 2
sp_info$barcode_col <- 1
for (id in sp_info$slide ) {
sp <- read.csv(sp_info[sp_info$slide == id, "spatial_path"])
sp_info[sp_info$slide == id, "diameter"] <- unique(sp$r) * 2
}
sp_info$output_dir <- file.path(sp_info$dir, "patch")
metadata_all <- read.csv(file.path(st_dir, "meta/meta_all_gene.csv"))
sp_info <- metadata_all[, c("slide", "tech", "species", "tissue", "involve_cancer")]
sp_info$dir <- file.path(st_dir, sp_info$tech)
sp_info$spatial_path <- file.path(sp_info$dir, "coord", paste0(sp_info$slide, "_coord.csv"))
all(file.exists(sp_info$spatial_path))
sp_info <- sp_info[file.exists(sp_info$spatial_path), ]
sp_info$image_path <- file.path(sp_info$dir, "image", paste0(sp_info$slide, ".png"))
all(file.exists(sp_info$image_path))
sp_info$output_dir <- file.path(sp_info$dir, "patch")
sp_info$pxl_x_col <- 3
sp_info$pxl_y_col <- 2
sp_info$barcode_col <- 1
sp_info[sp_info$involve_cancer, ]
sp_info[sp_info$involve_cancer == TRUE, ]
sp_info$involve_cancer
sp_info[sp_info$involve_cancer == "True", ]
sp_info <- sp_info[sp_info$involve_cancer == "True", ]
View(sp_info)
View(sp_info)
sp_info <- sp_info[sp_info$involve_cancer == "True" &
sp_info$species == "human" &
sp_info$tissue == "breast", ]
View(sp_info)
sp_info <- sp_info[sp_info$involve_cancer == "True" &
sp_info$species == "human" &
sp_info$tissue == "breast", ]
write.csv(sp_info,
"/Users/zhiningsui/GitHub/STpath/data/STimage-1K4M/create_patches_input_brca.csv",
row.names = F)
directory <- "/Users/zhiningsui/GitHub/STimage-1K4M/Visium/image"
list.files(directory)
all_files <- list.files(directory)
!all_files %in% paste0(sp_info$slide, ".png")
files_to_delete <- all_files[!all_files %in% paste0(sp_info$slide, ".png")]
files_to_delete
file_paths <- file.path(directory, files_to_delete)
file_paths
directory <- "/Users/zhiningsui/GitHub/STimage-1K4M/Visium/image"
all_files <- list.files(directory)
files_to_delete <- all_files[!all_files %in% paste0(sp_info$slide, ".png")]
files_to_delete
file_paths <- file.path(directory, files_to_delete)
file_paths
file.remove(file_paths)
st_dir <- "/Users/zhiningsui/GitHub/STimage-1K4M"
metadata_all <- read.csv(file.path(st_dir, "meta/meta_all_gene.csv"))
sp_info <- metadata_all[, c("slide", "tech", "species", "tissue", "involve_cancer")]
sp_info$dir <- file.path(st_dir, sp_info$tech)
sp_info$spatial_path <- file.path(sp_info$dir, "coord", paste0(sp_info$slide, "_coord.csv"))
all(file.exists(sp_info$spatial_path))
sp_info <- sp_info[file.exists(sp_info$spatial_path), ]
sp_info$image_path <- file.path(sp_info$dir, "image", paste0(sp_info$slide, ".png"))
all(file.exists(sp_info$image_path))
sp_info <- sp_info[file.exists(sp_info$image_path), ]
View(sp_info)
sp_info$output_dir <- file.path(sp_info$dir, "patch")
sp_info$pxl_x_col <- 3
sp_info$pxl_y_col <- 2
sp_info$barcode_col <- 1
for (id in sp_info$slide ) {
sp <- read.csv(sp_info[sp_info$slide == id, "spatial_path"])
sp_info[sp_info$slide == id, "diameter"] <- unique(sp$r) * 2
}
sp_info <- sp_info[sp_info$involve_cancer == "True" &
sp_info$species == "human" &
sp_info$tissue == "breast", ]
write.csv(sp_info,
"/Users/zhiningsui/GitHub/STpath/data/STimage-1K4M/create_patches_input_brca.csv",
row.names = F)
metadata_all <- read.csv(file.path(st_dir, "meta/meta_all_gene.csv"))
sp_info <- metadata_all[, c("slide", "tech", "species", "tissue", "involve_cancer")]
sp_info$dir <- file.path(st_dir, sp_info$tech)
sp_info$spatial_path <- file.path(sp_info$dir, "coord", paste0(sp_info$slide, "_coord.csv"))
all(file.exists(sp_info$spatial_path))
sp_info <- sp_info[file.exists(sp_info$spatial_path), ]
sp_info$image_path <- file.path(sp_info$dir, "image", paste0(sp_info$slide, ".png"))
all(file.exists(sp_info$image_path))
sp_info$output_dir <- file.path(sp_info$dir, "patch")
sp_info$pxl_x_col <- 3
sp_info$pxl_y_col <- 2
sp_info$barcode_col <- 1
sp_info <- sp_info[sp_info$involve_cancer == "True" &
sp_info$species == "human" &
sp_info$tissue == "breast", ]
metadata_all <- read.csv(file.path(st_dir, "meta/meta_all_gene.csv"))
sp_info <- metadata_all[, c("slide", "tech", "species", "tissue", "involve_cancer")]
sp_info$dir <- file.path(st_dir, sp_info$tech)
sp_info$spatial_path <- file.path(sp_info$dir, "coord", paste0(sp_info$slide, "_coord.csv"))
all(file.exists(sp_info$spatial_path))
sp_info <- sp_info[file.exists(sp_info$spatial_path), ]
sp_info$image_path <- file.path(sp_info$dir, "image", paste0(sp_info$slide, ".png"))
all(file.exists(sp_info$image_path))
sp_info <- sp_info[file.exists(sp_info$image_path), ]
sp_info$output_dir <- file.path(sp_info$dir, "patch")
sp_info$pxl_x_col <- 3
sp_info$pxl_y_col <- 2
sp_info$barcode_col <- 1
for (id in sp_info$slide ) {
sp <- read.csv(sp_info[sp_info$slide == id, "spatial_path"])
sp_info[sp_info$slide == id, "diameter"] <- unique(sp$r) * 2
}
sp_info <- sp_info[sp_info$involve_cancer == "True" &
sp_info$species == "human" &
sp_info$tissue == "breast", ]
write.csv(sp_info,
"/Users/zhiningsui/GitHub/STpath/data/STimage-1K4M/create_patches_input_brca.csv",
row.names = F)
st_dir <- "/Users/zhiningsui/GitHub/STimage-1K4M"
metadata_all <- read.csv(file.path(st_dir, "meta/meta_all_gene.csv"))
sp_info <- metadata_all[, c("slide", "tech", "species", "tissue", "involve_cancer")]
sp_info$dir <- file.path(st_dir, sp_info$tech)
sp_info$spatial_path <- file.path(sp_info$dir, "coord", paste0(sp_info$slide, "_coord.csv"))
all(file.exists(sp_info$spatial_path))
sp_info <- sp_info[file.exists(sp_info$spatial_path), ]
sp_info$image_path <- file.path(sp_info$dir, "image", paste0(sp_info$slide, ".png"))
all(file.exists(sp_info$image_path))
sp_info <- sp_info[file.exists(sp_info$image_path), ]
sp_info$output_dir <- file.path(sp_info$dir, "patch")
sp_info$pxl_x_col <- 3
sp_info$pxl_y_col <- 2
sp_info$barcode_col <- 1
for (id in sp_info$slide ) {
sp <- read.csv(sp_info[sp_info$slide == id, "spatial_path"])
sp_info[sp_info$slide == id, "diameter"] <- unique(sp$r) * 2
}
sp_info <- sp_info[sp_info$involve_cancer == "True" &
sp_info$species == "human" &
sp_info$tissue == "breast", ]
st_dir <- "/Users/zhiningsui/GitHub/STimage-1K4M/"
metadata_all <- read.csv("/Users/zhiningsui/GitHub/STpath/data/STImage-1K4M/meta/meta_all_gene.csv")
metadata_all
metadata_all$sid <- metadata_all$slide
st_meta <- metadata_all[metadata_all$sid %in% sp_info$slide, ]
View(st_meta)
st_meta$count_matrix_dir <- paste0(st_dir, st_meta$tech, "/gene_exp/", st_meta$sid, "_count.csv")
st_dir
st_dir <- "/Users/zhiningsui/GitHub/STimage-1K4M"
metadata_all <- read.csv(file.path(st_dir, "meta/meta_all_gene.csv"))
sp_info <- metadata_all[, c("slide", "tech", "species", "tissue", "involve_cancer")]
sp_info$dir <- file.path(st_dir, sp_info$tech)
sp_info$spatial_path <- file.path(sp_info$dir, "coord", paste0(sp_info$slide, "_coord.csv"))
all(file.exists(sp_info$spatial_path))
sp_info <- sp_info[file.exists(sp_info$spatial_path), ]
sp_info$image_path <- file.path(sp_info$dir, "image", paste0(sp_info$slide, ".png"))
all(file.exists(sp_info$image_path))
sp_info$output_dir <- file.path(sp_info$dir, "patch")
sp_info$pxl_x_col <- 3
sp_info$pxl_y_col <- 2
sp_info$barcode_col <- 1
for (id in sp_info$slide ) {
sp <- read.csv(sp_info[sp_info$slide == id, "spatial_path"])
sp_info[sp_info$slide == id, "diameter"] <- unique(sp$r) * 2
}
sp_info$count_matrix_dir <- paste0(st_dir, sp_info$tech, "/gene_exp/", sp_info$slide, "_count.csv")
sp_info <- sp_info[sp_info$involve_cancer == "True" &
sp_info$species == "human" &
sp_info$tissue == "breast", ]
View(sp_info)
sp_info$count_matrix_dir <- file.path(sp_info$dir, "gene_exp", paste0(sp_info$slide, "_count.csv"))
View(sp_info)
write.csv(sp_info,
"/Users/zhiningsui/GitHub/STpath/data/STimage-1K4M/create_patches_input_brca.csv",
row.names = F)
rm(list = ls())
setwd("~/GitHub/STpath/code/STpath pipeline")
# Load necessary libraries
library(ggplot2)
library(data.table)
library(MuSiC)
library(CARD)
library(stringr)
library(Matrix)
library(readr)
library(tidyverse)
library(biomaRt)
library(gprofiler2)
library(org.Hs.eg.db)
library(EnsDb.Hsapiens.v79)
library(dplyr)
library(grid)
source("deconvolution.R")
# Set directories
sc_dir <- "/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/scRNASeq/"
st_dir <- "/Users/zhiningsui/GitHub/STimage-1K4M"
output_dir <- "/Users/zhiningsui/GitHub/STpath/output/STimage-1K4M/deconvolution/"
# Load metadata for the ST data
st_meta <- read.csv("/Users/zhiningsui/GitHub/STpath/data/STimage-1K4M/create_patches_input_brca.csv")
load(file.path(output_dir, "sc_ref_avg_ct_expr.rda"))
expr_pred_all <- list()
expr_pred_all.log2trans <- list()
expr_obs_all <- list()
expr_obs_all.log2trans <- list()
for (i in 1:3) {
s1 <- slides[i]
type1 <- st_meta[st_meta$sid == s1, "subtype"]
# s1 <- st_meta[i, "sid"]
prop <- read.csv(file.path(output_dir, sprintf("/Proportion_%s_celltype_major.csv", s1)),
check.names = F)
# Set the first column as rownames and clean up the proportion data
colnames(prop)[1] <- "X"
prop <- prop %>%
column_to_rownames("X") %>%
dplyr::select(-sid) %>%
t()
# Retrieve the reference average expression matrix
sc_ct_avg <- avg_sc_ref[[type1]]
sc_ct_avg <- sc_ct_avg[, rownames(prop)]
# Calculate predicted gene expression
predicted_expr <- sc_ct_avg %*% prop
# Store the predicted expression in a list
expr_pred_all[[s1]] <- predicted_expr
# Retrieve the reference average expression matrix
sc_ct_avg <- avg_sc_ref[[paste0(type1, ".log2trans")]]
sc_ct_avg <- sc_ct_avg[, rownames(prop)]
# Calculate predicted gene expression
predicted_expr <- sc_ct_avg %*% prop
# Store the predicted expression in a list
expr_pred_all.log2trans[[s1]] <- predicted_expr
gc()
# Read the spatial transcriptomics count matrix for the sample
stdata_s <- read.csv(st_meta[st_meta$sid == s1, "count_matrix_dir"]) %>%
remove_rownames %>% column_to_rownames(var="X") %>% t()
stdata_s <- as(stdata_s, "sparseMatrix")
stdata_s <- as(stdata_s, "CsparseMatrix")
stdata_s.log2trans <- log2(stdata_s+1)
stdata_s.log2trans <- as(stdata_s.log2trans, "sparseMatrix")
stdata_s.log2trans <- as(stdata_s.log2trans, "CsparseMatrix")
# Extract the count matrix for columns (samples) matching the predicted expression matrix
st_count <- stdata_s[, colnames(predicted_expr)]
expr_obs_all[[s1]] <- st_count
st_count <- stdata_s.log2trans[, colnames(predicted_expr)]
expr_obs_all.log2trans[[s1]] <- st_count
gc()
}
slides <- c("Human_Breast_Wu_06052021_Visium_1142243F",
"Human_Breast_Wu_06052021_Visium_1160920F",
"Human_Breast_Wu_06052021_Visium_CID4465",
"Human_Breast_Wu_06052021_Visium_CID44971",
"Human_Breast_Wu_06052021_Visium_CID4535")
for (i in 1:3) {
s1 <- slides[i]
type1 <- st_meta[st_meta$sid == s1, "subtype"]
# s1 <- st_meta[i, "sid"]
prop <- read.csv(file.path(output_dir, sprintf("/Proportion_%s_celltype_major.csv", s1)),
check.names = F)
# Set the first column as rownames and clean up the proportion data
colnames(prop)[1] <- "X"
prop <- prop %>%
column_to_rownames("X") %>%
dplyr::select(-sid) %>%
t()
# Retrieve the reference average expression matrix
sc_ct_avg <- avg_sc_ref[[type1]]
sc_ct_avg <- sc_ct_avg[, rownames(prop)]
# Calculate predicted gene expression
predicted_expr <- sc_ct_avg %*% prop
# Store the predicted expression in a list
expr_pred_all[[s1]] <- predicted_expr
# Retrieve the reference average expression matrix
sc_ct_avg <- avg_sc_ref[[paste0(type1, ".log2trans")]]
sc_ct_avg <- sc_ct_avg[, rownames(prop)]
# Calculate predicted gene expression
predicted_expr <- sc_ct_avg %*% prop
# Store the predicted expression in a list
expr_pred_all.log2trans[[s1]] <- predicted_expr
gc()
# Read the spatial transcriptomics count matrix for the sample
stdata_s <- read.csv(st_meta[st_meta$sid == s1, "count_matrix_dir"]) %>%
remove_rownames %>% column_to_rownames(var="X") %>% t()
stdata_s <- as(stdata_s, "sparseMatrix")
stdata_s <- as(stdata_s, "CsparseMatrix")
stdata_s.log2trans <- log2(stdata_s+1)
stdata_s.log2trans <- as(stdata_s.log2trans, "sparseMatrix")
stdata_s.log2trans <- as(stdata_s.log2trans, "CsparseMatrix")
# Extract the count matrix for columns (samples) matching the predicted expression matrix
st_count <- stdata_s[, colnames(predicted_expr)]
expr_obs_all[[s1]] <- st_count
st_count <- stdata_s.log2trans[, colnames(predicted_expr)]
expr_obs_all.log2trans[[s1]] <- st_count
gc()
}
sample_wise_corr <- list()
gene_wise_corr <- list()
for (i in 1:length(slides)) {
s1 <- slides[i]
expr_pred <- expr_pred_all[[s1]]
expr_obs <- expr_obs_all[[s1]]
# Find common genes between the predicted and observed matrices
common_genes <- intersect(rownames(expr_obs), rownames(expr_pred))
expr_obs <- expr_obs[common_genes,]
expr_pred <- expr_pred[common_genes, ]
expr_obs <- expr_obs[, colnames(expr_pred)]
# Compute sample-wise correlations
colwise_corr <- sapply(seq_len(ncol(expr_obs)), function(i) {
cor(expr_obs[, i], expr_pred[, i], method = "pearson")
})
names(colwise_corr) <- colnames(expr_obs)
sample_wise_corr[[s1]] <- colwise_corr
# Compute gene-wise correlations
rowwise_corr <- sapply(seq_len(nrow(expr_obs)), function(i) {
cor(expr_obs[i, ], expr_pred[i, ], method = "pearson")
})
names(rowwise_corr) <- rownames(expr_obs)
gene_wise_corr[[s1]] <- rowwise_corr
gc()
}
View(sample_wise_corr)
i = 1
hist(sample_wise_corr[[i]], main = paste0("Sample-wise Correlation for ", names(sample_wise_corr)[i]),
xlab = "Correlation",  breaks = 30, xlim = c(0,1))
for (i in 1:3) {
s1 <- slides[i]
expr_pred <- expr_pred_all[[s1]]
expr_obs <- expr_obs_all[[s1]]
# Find common genes between the predicted and observed matrices
common_genes <- intersect(rownames(expr_obs), rownames(expr_pred))
expr_obs <- expr_obs[common_genes,]
expr_pred <- expr_pred[common_genes, ]
expr_obs <- expr_obs[, colnames(expr_pred)]
# Compute sample-wise correlations
colwise_corr <- sapply(seq_len(ncol(expr_obs)), function(i) {
cor(expr_obs[, i], expr_pred[, i], method = "pearson")
})
names(colwise_corr) <- colnames(expr_obs)
sample_wise_corr[[s1]] <- colwise_corr
# Compute gene-wise correlations
rowwise_corr <- sapply(seq_len(nrow(expr_obs)), function(i) {
cor(expr_obs[i, ], expr_pred[i, ], method = "pearson")
})
names(rowwise_corr) <- rownames(expr_obs)
gene_wise_corr[[s1]] <- rowwise_corr
gc()
}
i = 1
hist(sample_wise_corr[[i]], main = paste0("Spot-wise Correlation for ", names(sample_wise_corr)[i]),
xlab = "Correlation",  breaks = 30, xlim = c(0,1))
hist(gene_wise_corr[[i]], main = paste0("Gene-wise Correlation for ", names(sample_wise_corr)[i]),
xlab = "Correlation",  breaks = 30, xlim = c(0,1))
write.csv(metadata,
file.path(github_dir, "metadata_brca.csv"),
row.names = F)
st_dir <- "/Users/zhiningsui/GitHub/STimage-1K4M"
github_dir <- "/Users/zhiningsui/GitHub/STpath/data/STimage-1K4M"
sc_dir <- "/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/scRNASeq/"
output_dir <- "../../output/STimage-1K4M/deconvolution/ST"
metadata <- read.csv(file.path(github_dir, "metadata_brca.csv"))[,-1]
View(metadata)
write.csv(metadata,
file.path(github_dir, "metadata_brca.csv"),
row.names = F)
metadata <- read.csv(file.path(github_dir, "metadata_brca.csv"))
View(metadata)
metadata_visium <- metadata[metadata$tech == "Visium", ]
View(metadata_visium)
View(metadata_visium)
write.csv(metadata_visium, file = file.path(github_dir, "metadata_brca_visium.csv"))
write.csv(metadata_visium, file = file.path(github_dir, "metadata_brca_visium.csv"),
row.names = F)
github_dir
write.csv(metadata_visium, file = file.path(github_dir, "metadata_brca_visium.csv"),
row.names = F)
metadata_visium$subtype <- ifelse(metadata_visium$subtype %in% c("ER", "HER2"),
paste0(metadata_visium$subtype, "+"),
metadata_visium$subtype)
metadata <- read.csv(file.path(github_dir, "metadata_brca.csv"))
metadata_visium <- metadata[metadata$tech == "Visium", ]
metadata_visium$subtype <- ifelse(metadata_visium$subtype %in% c("ER", "HER2"),
paste0(metadata_visium$subtype, "+"),
metadata_visium$subtype)
write.csv(metadata_visium, file = file.path(github_dir, "metadata_brca_visium.csv"),
row.names = F)
metadata_visium$sid <- metadata_visium$slide
sp_info <- metadata_visium[, c("sid", "subtype", "tech")]
sp_info$dir <- file.path(st_dir, sp_info$tech)
sp_info$spatial_path <- file.path(sp_info$dir, "coord", paste0(sp_info$sid, "_coord.csv"))
all(file.exists(sp_info$spatial_path))
sp_info <- sp_info[file.exists(sp_info$spatial_path), ]
sp_info$image_path <- file.path(sp_info$dir, "image", paste0(sp_info$sid, ".png"))
all(file.exists(sp_info$image_path))
sp_info <- sp_info[file.exists(sp_info$image_path), ]
metadata_visium$sid <- metadata_visium$slide
sp_info <- metadata_visium[, c("sid", "subtype", "tech")]
View(sc_ct_avg)
View(avg_sc_ref)
View(metadata)
st_dir <- "/Users/zhiningsui/GitHub/STimage-1K4M"
github_dir <- "/Users/zhiningsui/GitHub/STpath/data/STimage-1K4M"
sc_dir <- "/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/scRNASeq/"
output_dir <- "../../output/STimage-1K4M/deconvolution/ST"
metadata <- read.csv(file.path(github_dir, "metadata_brca.csv"))
metadata_visium <- metadata[metadata$tech == "Visium", ]
metadata_visium$subtype <- ifelse(metadata_visium$subtype %in% c("ER", "HER2"),
paste0(metadata_visium$subtype, "+"),
metadata_visium$subtype)
write.csv(metadata_visium, file = file.path(github_dir, "metadata_brca_visium.csv"),
row.names = F)
metadata <- read.csv(file.path(github_dir, "metadata_brca.csv"))
metadata_visium <- metadata[metadata$tech == "Visium", ]
metadata_visium$subtype <- ifelse(metadata_visium$subtype %in% c("ER", "HER2"),
paste0(metadata_visium$subtype, "+"),
metadata_visium$subtype)
metadata_visium$subtype <- ifelse(metadata_visium$subtype == "Luminal",
"ER+",
metadata_visium$subtype)
write.csv(metadata_visium, file = file.path(github_dir, "metadata_brca_visium.csv"),
row.names = F)
tmp <- readMM("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/barcodes.tsv.gz")
tmp <- read.csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/barcodes.tsv.gz")
View(tmp)
tmp <- readMM("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/matrix.mtx.gz")
colnames(tmp)
rownames(tmp)
barcode <- read_csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/barcodes.tsv.gz")
barcodes <- read.csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/barcodes.tsv.gz")
features <- read.csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/features.tsv.gz")
colnames(mtx) <- barcodes
mtx <- readMM("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/matrix.mtx.gz")
colnames(mtx) <- barcodes
colnames(mtx) <- features
View(barcode)
barcodes <- read.csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/barcodes.tsv.gz",
header = F)
View(barcodes)
features <- read.csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/features.tsv.gz",
header = F)
colnames(mtx) <- barcodes$V1
rownames(mtx) <- features$V1
mtx[1:5,1:5]
mtx <- t(mtx)
tmp <- read.csv("/Users/zhiningsui/GitHub/STimage-1K4M/Visium/gene_exp/Human_Breast_Wu_06052021_Visium_CID4535_count.csv")
rownames(mtx) <- paste0("Human_Breast_Wu_06052021_Visium_CID4290_", rownames(mtx))
colnames(mtx)
colnames(tmp)
rownames(mtx)
write.csv("/Users/zhiningsui/GitHub/STimage-1K4M/Visium/gene_exp/Human_Breast_Wu_06052021_Visium_CID4290_count.csv")
write.csv(mtx, "/Users/zhiningsui/GitHub/STimage-1K4M/Visium/gene_exp/Human_Breast_Wu_06052021_Visium_CID4290_count.csv")
write.csv(as.data.frame(mtx), "/Users/zhiningsui/GitHub/STimage-1K4M/Visium/gene_exp/Human_Breast_Wu_06052021_Visium_CID4290_count.csv")
data.frame(mtx)
matrix(mtx)
mtx <- readMM("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/matrix.mtx.gz")
mtx <- matrix(mtx)
View(mtx)
mtx <- readMM("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/matrix.mtx.gz")
mtx <- as.matrix(mtx)
barcodes <- read.csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/barcodes.tsv.gz",
header = F)
features <- read.csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/features.tsv.gz",
header = F)
colnames(mtx) <- barcodes$V1
rownames(mtx) <- features$V1
mtx <- readMM("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/matrix.mtx.gz")
mtx <- as.matrix(mtx)
dim(mt)
dim(mtx)
barcodes <- read.csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/barcodes.tsv.gz",
header = F)
features <- read.csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/filtered_count_matrices/CID4290_filtered_count_matrix/features.tsv.gz",
header = F)
colnames(mtx) <- barcodes$V1
rownames(mtx) <- features$V1
mtx <- t(mtx)
rownames(mtx) <- paste0("Human_Breast_Wu_06052021_Visium_CID4290_", rownames(mtx))
write.csv(mtx, "/Users/zhiningsui/GitHub/STimage-1K4M/Visium/gene_exp/Human_Breast_Wu_06052021_Visium_CID4290_count.csv")
tmp <- read.csv("/Users/zhiningsui/GitHub/STimage-1K4M/Visium/gene_exp/Human_Breast_Wu_06052021_Visium_CID4535_count.csv")
View(tmp)
tmp2 <- read.csv("/Users/zhiningsui/GitHub/STimage-1K4M/Visium/gene_exp/Human_Breast_Wu_06052021_Visium_CID4290_count.csv")
View(tmp2)
View(tmp)
View(tmp2)
View(tmp)
tmp <- read.csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/spatial/CID4290_spatial/tissue_positions_list.csv")
tmp
tmp <- read.csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/spatial/CID4290_spatial/tissue_positions_list.csv",
header = F)
tmp
tmp <- tmp[, c(1, 5, 6)]
tmp
tmp$V1 <- paste0("Human_Breast_Wu_06052021_Visium_CID4290_", tmp$V1)
tmp <- tmp %>%
column_to_rownames(V1)
tmp <- tmp %>%
column_to_rownames("V1")
tmp
colnames(tmp) <- c("yaxis", "xaxis")
View(tmp)
tmp <- read.csv("/Users/zhiningsui/Library/CloudStorage/Dropbox/st2image_data/Wu_2021/data/spatial/CID4290_spatial/tissue_positions_list.csv",
header = F)
tmp <- tmp[, c(1, 5, 6)]
tmp$V1 <- paste0("Human_Breast_Wu_06052021_Visium_CID4290_", tmp$V1)
tmp <- tmp %>%
column_to_rownames("V1")
colnames(tmp) <- c("yaxis", "xaxis")
